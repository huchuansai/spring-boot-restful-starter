package ${package.Controller};

import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.*;
import org.springframework.web.bind.annotation.*;
import springfox.documentation.annotations.ApiIgnore;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.RequestMapping;
import javax.validation.Valid;
import lombok.RequiredArgsConstructor;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import ${cfg.manager}.${entity}Manager;
import ${cfg.paramPath}.${entity}AddParam;
import ${cfg.paramPath}.${entity}UpdateParam;
import ${cfg.voPath}.${entity}Vo;
#if(${cfg.controllerClazz})
#foreach($ctl in ${cfg.controllerClazz})
import ${ctl};
#end
#end

/**
 * @Description:
 * @Author: ${author}
 * @Date: $!{cfg.date}
 */

@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(tags = "$!{table.comment}管理 ${table.controllerName}")
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    private final ${entity}Manager manager;

    @PostMapping
    @ApiOperation("新增$!{table.comment}")
    public Result<#if(${idType}=='AUTO' ||${idType}=='NONE')Long#elseif(${idType}=='INPUT')String#else String#end> insert${entity}(@Valid @RequestBody ${entity}AddParam param,
                                            @ApiIgnore @RequestAttribute(value = "userInfo") User user){
        return ResultGenerator.genSuccessResult(manager.insert${entity}(param, user));
    }

    @PutMapping("/{id}")
    @ApiOperation("修改$!{table.comment}")
    public Result<Boolean> update${entity}(@PathVariable("id") #if(${idType}=='AUTO' ||${idType}=='NONE')Long#elseif(${idType}=='INPUT')String#else String#end id, @Valid @RequestBody ${entity}UpdateParam param,
                                                @ApiIgnore @RequestAttribute(value = "userInfo") User user) {
        return ResultGenerator.genSuccessResult(manager.update${entity}(id, param, user));
    }

    @DeleteMapping("/{id}")
    @ApiOperation("删除$!{table.comment}")
    public Result<Boolean> remove${entity}(@PathVariable("id") #if(${idType}=='AUTO' ||${idType}=='NONE')Long#elseif(${idType}=='INPUT')String#else String#end id, @ApiIgnore @RequestAttribute(value = "userInfo") User user) {
        return ResultGenerator.genSuccessResult(manager.remove${entity}(id, user));
    }

    @GetMapping("/{id}")
    @ApiOperation("获得$!{table.comment}详情")
    public Result<${entity}Vo> ${table.entityPath}Info(@PathVariable("id") #if(${idType}=='AUTO' ||${idType}=='NONE')Long#elseif(${idType}=='INPUT')String#else String#end id, @ApiIgnore @RequestAttribute(value = "userInfo") User user) {
        return ResultGenerator.genSuccessResult(manager.${table.entityPath}Info(id, user));
    }

//    @GetMapping("/page")
//    @ApiOperation("$!{table.comment}-分页接口")
//    public Result<PageInfo<${entity}Vo>> pageQuery${entity}(${entity}PageParam param, @ApiIgnore @RequestAttribute(value = "userInfo") User user) {
//        return ResultGenerator.genSuccessResult(manager.pageQuery${entity}(param, user));
//    }

//    @GetMapping("/list")
//    @ApiOperation("$!{table.comment}-列表接口")
//    public Result<List<${entity}Vo>> ${table.entityPath}List(${entity}ListParam param, @ApiIgnore @RequestAttribute(value = "userInfo") User user) {
//        return ResultGenerator.genSuccessResult(manager.${table.entityPath}List(param, user));
//    }

}

#end